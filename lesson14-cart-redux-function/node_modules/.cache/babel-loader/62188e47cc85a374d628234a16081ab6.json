{"ast":null,"code":"import * as Types from \"../constants/ActionType\";\nimport products from \"./products\";\nvar data = JSON.parse(localStorage.getItem(\"CART\"));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n  var {\n    product,\n    quantity\n  } = action;\n  var index = -1;\n\n  switch (action.type) {\n    case Types.ADD_TO_CART:\n      index = findProductCart(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += quantity;\n      } else {\n        state.push({\n          product,\n          quantity\n        });\n      }\n\n      localStorage.setItem(\"CART\", JSON.stringify(state));\n      return [...state];\n\n    case Types.DELETE_PRODUCT_IN_CART:\n      index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n\n      localStorage.setItem(\"CART\", JSON.stringify(state));\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nvar findProductCart = (cart, product) => {\n  var index = -1;\n\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      if (cart[i].product.id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson14-cart-redux/src/reducers/cart.js"],"names":["Types","products","data","JSON","parse","localStorage","getItem","initialState","cart","state","action","product","quantity","index","type","ADD_TO_CART","findProductCart","push","setItem","stringify","DELETE_PRODUCT_IN_CART","findProductInCart","splice","length","i","id"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,MAAMM,IAAI,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBF,MAA5B;AACA,MAAIG,KAAK,GAAG,CAAC,CAAb;;AACA,UAAQH,MAAM,CAACI,IAAf;AACE,SAAKd,KAAK,CAACe,WAAX;AACEF,MAAAA,KAAK,GAAGG,eAAe,CAACP,KAAD,EAAQE,OAAR,CAAvB;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBJ,QAAAA,KAAK,CAACI,KAAD,CAAL,CAAaD,QAAb,IAAyBA,QAAzB;AACD,OAFD,MAEO;AACLH,QAAAA,KAAK,CAACQ,IAAN,CAAW;AACTN,UAAAA,OADS;AAETC,UAAAA;AAFS,SAAX;AAID;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACF,SAAKT,KAAK,CAACoB,sBAAX;AACEP,MAAAA,KAAK,GAAGQ,iBAAiB,CAACZ,KAAD,EAAQE,OAAR,CAAzB;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBJ,QAAAA,KAAK,CAACa,MAAN,CAAaT,KAAb,EAAoB,CAApB;AACD;;AACDR,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACF;AACE,aAAO,CAAC,GAAGA,KAAJ,CAAP;AArBJ;AAuBD,CA1BD;;AA4BA,IAAIO,eAAe,GAAG,CAACR,IAAD,EAAOG,OAAP,KAAmB;AACvC,MAAIE,KAAK,GAAG,CAAC,CAAb;;AACA,MAAIL,IAAI,CAACe,MAAL,GAAc,CAAlB,EAAqB;AACnB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,IAAI,CAACe,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,UAAIhB,IAAI,CAACgB,CAAD,CAAJ,CAAQb,OAAR,CAAgBc,EAAhB,KAAuBd,OAAO,CAACc,EAAnC,EAAuC;AACrCZ,QAAAA,KAAK,GAAGW,CAAR;AACA;AACD;AACF;AACF;;AACD,SAAOX,KAAP;AACD,CAXD;;AAaA,eAAeL,IAAf","sourcesContent":["import * as Types from \"../constants/ActionType\";\nimport products from \"./products\";\nvar data = JSON.parse(localStorage.getItem(\"CART\"));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n  var { product, quantity } = action;\n  var index = -1;\n  switch (action.type) {\n    case Types.ADD_TO_CART:\n      index = findProductCart(state, product);\n      if (index !== -1) {\n        state[index].quantity += quantity;\n      } else {\n        state.push({\n          product,\n          quantity,\n        });\n      }\n      localStorage.setItem(\"CART\", JSON.stringify(state));\n      return [...state];\n    case Types.DELETE_PRODUCT_IN_CART:\n      index = findProductInCart(state, product);\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n      localStorage.setItem(\"CART\", JSON.stringify(state));\n      return [...state];\n    default:\n      return [...state];\n  }\n};\n\nvar findProductCart = (cart, product) => {\n  var index = -1;\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      if (cart[i].product.id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n  return index;\n};\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}