{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson14-cart-redux-function/src/containers/CartContainer.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport Cart from \"../components/Cart\";\nimport CartItem from \"../components/CartItem\";\nimport * as Message from \"../constants/Message\";\nimport CartResult from \"../components/CartResult\";\nimport { actChangeMessage, actDeleteProductInCart, actUpdateProductInCart } from \"../actions/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction CartContainer(props) {\n  _s();\n\n  const cart = useSelector(state => {\n    return state.cart;\n  });\n  const dispatch = useDispatch();\n\n  const showCartItem = cart => {\n    var result = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: Message.MSG_CART_EMPTY\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n\n    if (cart.length > 0) {\n      result = cart.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(CartItem, {\n          item: item,\n          index: index,\n          onDeleteProductInCart: product => {\n            dispatch(actDeleteProductInCart(product));\n          },\n          onChangeMessage: message => {\n            dispatch(actChangeMessage(message));\n          },\n          onUpdateProductInCart: (product, quantity) => {\n            dispatch(actUpdateProductInCart(product, quantity));\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      });\n    }\n\n    return result;\n  };\n\n  const showTotalAmount = cart => {\n    var result = null;\n\n    if (cart.length > 0) {\n      return /*#__PURE__*/_jsxDEV(CartResult, {\n        cart: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Cart, {\n    children: [showCartItem(cart), \",\", showTotalAmount(cart)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContainer, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartContainer;\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }),\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n}; // const mapDispatchToProps = (dispatch, props) => {\n//   return {\n// onDeleteProductInCart: (product) => {\n//   dispatch(actDeleteProductInCart(product));\n// },\n// onChangeMessage: (message) => {\n//   dispatch(actChangeMessage(message));\n// },\n//   onUpdateProductInCart: (product, quantity) => {\n//     dispatch(actUpdateProductInCart(product, quantity));\n//   },\n// };\n// };\n\nexport default CartContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContainer\");","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson14-cart-redux-function/src/containers/CartContainer.js"],"names":["PropTypes","Cart","CartItem","Message","CartResult","actChangeMessage","actDeleteProductInCart","actUpdateProductInCart","useDispatch","useSelector","CartContainer","props","cart","state","dispatch","showCartItem","result","MSG_CART_EMPTY","length","map","item","index","product","message","quantity","showTotalAmount","propTypes","arrayOf","shape","id","number","isRequired","name","string","image","description","price","inventory","rating"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport Cart from \"../components/Cart\";\nimport CartItem from \"../components/CartItem\";\nimport * as Message from \"../constants/Message\";\nimport CartResult from \"../components/CartResult\";\nimport {\n  actChangeMessage,\n  actDeleteProductInCart,\n  actUpdateProductInCart,\n} from \"../actions/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction CartContainer(props) {\n  const cart = useSelector((state) => {\n    return state.cart;\n  });\n\n  const dispatch = useDispatch();\n\n  const showCartItem = (cart) => {\n    var result = (\n      <tr>\n        <td>{Message.MSG_CART_EMPTY}</td>\n      </tr>\n    );\n    if (cart.length > 0) {\n      result = cart.map((item, index) => {\n        return (\n          <CartItem\n            key={index}\n            item={item}\n            index={index}\n            onDeleteProductInCart={(product) => {\n              dispatch(actDeleteProductInCart(product));\n            }}\n            onChangeMessage={(message) => {\n              dispatch(actChangeMessage(message));\n            }}\n            onUpdateProductInCart={(product, quantity) => {\n              dispatch(actUpdateProductInCart(product, quantity));\n            }}\n          />\n        );\n      });\n    }\n    return result;\n  };\n\n  const showTotalAmount = (cart) => {\n    var result = null;\n    if (cart.length > 0) {\n      return <CartResult cart={cart}></CartResult>;\n    }\n    return result;\n  };\n\n  return (\n    <Cart>\n      {showCartItem(cart)},{showTotalAmount(cart)}\n    </Cart>\n  );\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(\n    PropTypes.shape({\n      product: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        inventory: PropTypes.number.isRequired,\n        rating: PropTypes.number.isRequired,\n      }),\n      quantity: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\n// const mapDispatchToProps = (dispatch, props) => {\n//   return {\n// onDeleteProductInCart: (product) => {\n//   dispatch(actDeleteProductInCart(product));\n// },\n\n// onChangeMessage: (message) => {\n//   dispatch(actChangeMessage(message));\n// },\n\n//   onUpdateProductInCart: (product, quantity) => {\n//     dispatch(actUpdateProductInCart(product, quantity));\n//   },\n// };\n// };\n\nexport default CartContainer;\n"]},"metadata":{},"sourceType":"module"}