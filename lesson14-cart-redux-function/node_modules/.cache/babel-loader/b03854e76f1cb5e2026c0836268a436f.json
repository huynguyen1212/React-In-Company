{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson14-cart-redux-function/src/containers/CartContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Cart from \"../components/Cart\";\nimport CartItem from \"../components/CartItem\";\nimport * as Message from \"../constants/Message\";\nimport CartResult from \"../components/CartResult\";\nimport { actChangeMessage, actDeleteProductInCart, actUpdateProductInCart } from \"../actions/index\";\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      var {\n        onDeleteProductInCart,\n        onChangeMessage,\n        onUpdateProductInCart\n      } = this.props;\n\n      var result = /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Message.MSG_CART_EMPTY\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this);\n\n      if (cart.length > 0) {\n        result = cart.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(CartItem, {\n            item: item,\n            index: index,\n            onDeleteProductInCart: onDeleteProductInCart,\n            onChangeMessage: onChangeMessage,\n            onUpdateProductInCart: onUpdateProductInCart\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this);\n        });\n      }\n\n      return result;\n    };\n\n    this.showTotalAmount = cart => {\n      var result = null;\n\n      if (cart.length > 0) {\n        return /*#__PURE__*/_jsxDEV(CartResult, {\n          cart: cart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }, this);\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var {\n      cart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Cart, {\n      children: [this.showCartItem(cart), \",\", this.showTotalAmount(cart)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }),\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  onChangeMessage: PropTypes.func.isRequired,\n  onDeleteProductInCart: PropTypes.func.isRequired,\n  onUpdateProductInCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: product => {\n      dispatch(actDeleteProductInCart(product));\n    },\n    onChangeMessage: message => {\n      dispatch(actChangeMessage(message));\n    },\n    onUpdateProductInCart: (product, quantity) => {\n      dispatch(actUpdateProductInCart(product, quantity));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson14-cart-redux-function/src/containers/CartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","CartItem","Message","CartResult","actChangeMessage","actDeleteProductInCart","actUpdateProductInCart","CartContainer","showCartItem","cart","onDeleteProductInCart","onChangeMessage","onUpdateProductInCart","props","result","MSG_CART_EMPTY","length","map","item","index","showTotalAmount","render","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","func","mapStateToProps","state","mapDispatchToProps","dispatch","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Cart from \"../components/Cart\";\nimport CartItem from \"../components/CartItem\";\nimport * as Message from \"../constants/Message\";\nimport CartResult from \"../components/CartResult\";\nimport {\n  actChangeMessage,\n  actDeleteProductInCart,\n  actUpdateProductInCart,\n} from \"../actions/index\";\n\nclass CartContainer extends Component {\n  render() {\n    var { cart } = this.props;\n    return (\n      <Cart>\n        {this.showCartItem(cart)},{this.showTotalAmount(cart)}\n      </Cart>\n    );\n  }\n\n  showCartItem = (cart) => {\n    var {\n      onDeleteProductInCart,\n      onChangeMessage,\n      onUpdateProductInCart,\n    } = this.props;\n    var result = (\n      <tr>\n        <td>{Message.MSG_CART_EMPTY}</td>\n      </tr>\n    );\n    if (cart.length > 0) {\n      result = cart.map((item, index) => {\n        return (\n          <CartItem\n            key={index}\n            item={item}\n            index={index}\n            onDeleteProductInCart={onDeleteProductInCart}\n            onChangeMessage={onChangeMessage}\n            onUpdateProductInCart={onUpdateProductInCart}\n          />\n        );\n      });\n    }\n    return result;\n  };\n\n  showTotalAmount = (cart) => {\n    var result = null;\n    if (cart.length > 0) {\n      return <CartResult cart={cart}></CartResult>;\n    }\n    return result;\n  };\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(\n    PropTypes.shape({\n      product: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        inventory: PropTypes.number.isRequired,\n        rating: PropTypes.number.isRequired,\n      }),\n      quantity: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  onChangeMessage: PropTypes.func.isRequired,\n  onDeleteProductInCart: PropTypes.func.isRequired,\n  onUpdateProductInCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cart: state.cart,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: (product) => {\n      dispatch(actDeleteProductInCart(product));\n    },\n\n    onChangeMessage: (message) => {\n      dispatch(actChangeMessage(message));\n    },\n\n    onUpdateProductInCart: (product, quantity) => {\n      dispatch(actUpdateProductInCart(product, quantity));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}