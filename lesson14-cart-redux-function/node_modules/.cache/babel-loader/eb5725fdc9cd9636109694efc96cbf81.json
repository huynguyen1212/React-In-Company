{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson14-cart-redux-function/src/containers/CartContainer.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport Cart from \"../components/Cart\";\nimport CartItem from \"../components/CartItem\";\nimport * as Message from \"../constants/Message\";\nimport CartResult from \"../components/CartResult\";\nimport { actChangeMessage, actDeleteProductInCart, actUpdateProductInCart } from \"../actions/index\";\nimport { useSelector } from \"react-redux\";\n\nfunction CartContainer(props) {\n  _s();\n\n  const cart = useSelector(state => {\n    state.cart;\n  });\n\n  const showCartItem = cart => {\n    var {\n      onDeleteProductInCart,\n      onChangeMessage,\n      onUpdateProductInCart\n    } = props;\n\n    var result = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: Message.MSG_CART_EMPTY\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n\n    if (cart.length > 0) {\n      result = cart.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(CartItem, {\n          item: item,\n          index: index,\n          onDeleteProductInCart: onDeleteProductInCart,\n          onChangeMessage: onChangeMessage,\n          onUpdateProductInCart: onUpdateProductInCart\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      });\n    }\n\n    return result;\n  };\n\n  const showTotalAmount = cart => {\n    var result = null;\n\n    if (cart.length > 0) {\n      return /*#__PURE__*/_jsxDEV(CartResult, {\n        cart: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Cart, {\n    children: [showCartItem(cart), \",\", showTotalAmount(cart)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContainer, \"F/eUaK1jsOscSpo7EHWodw6fhDE=\", false, function () {\n  return [useSelector];\n});\n\n_c = CartContainer;\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }),\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  onChangeMessage: PropTypes.func.isRequired,\n  onDeleteProductInCart: PropTypes.func.isRequired,\n  onUpdateProductInCart: PropTypes.func.isRequired\n}; // const mapDispatchToProps = (dispatch, props) => {\n//   return {\n//     onDeleteProductInCart: (product) => {\n//       dispatch(actDeleteProductInCart(product));\n//     },\n//     onChangeMessage: (message) => {\n//       dispatch(actChangeMessage(message));\n//     },\n//     onUpdateProductInCart: (product, quantity) => {\n//       dispatch(actUpdateProductInCart(product, quantity));\n//     },\n//   };\n// };\n\nexport default CartContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContainer\");","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson14-cart-redux-function/src/containers/CartContainer.js"],"names":["PropTypes","Cart","CartItem","Message","CartResult","actChangeMessage","actDeleteProductInCart","actUpdateProductInCart","useSelector","CartContainer","props","cart","state","showCartItem","onDeleteProductInCart","onChangeMessage","onUpdateProductInCart","result","MSG_CART_EMPTY","length","map","item","index","showTotalAmount","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","func"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport Cart from \"../components/Cart\";\nimport CartItem from \"../components/CartItem\";\nimport * as Message from \"../constants/Message\";\nimport CartResult from \"../components/CartResult\";\nimport {\n  actChangeMessage,\n  actDeleteProductInCart,\n  actUpdateProductInCart,\n} from \"../actions/index\";\nimport { useSelector } from \"react-redux\";\n\nfunction CartContainer(props) {\n  const cart = useSelector((state) => {\n    state.cart;\n  });\n\n  const showCartItem = (cart) => {\n    var {\n      onDeleteProductInCart,\n      onChangeMessage,\n      onUpdateProductInCart,\n    } = props;\n    var result = (\n      <tr>\n        <td>{Message.MSG_CART_EMPTY}</td>\n      </tr>\n    );\n    if (cart.length > 0) {\n      result = cart.map((item, index) => {\n        return (\n          <CartItem\n            key={index}\n            item={item}\n            index={index}\n            onDeleteProductInCart={onDeleteProductInCart}\n            onChangeMessage={onChangeMessage}\n            onUpdateProductInCart={onUpdateProductInCart}\n          />\n        );\n      });\n    }\n    return result;\n  };\n\n  const showTotalAmount = (cart) => {\n    var result = null;\n    if (cart.length > 0) {\n      return <CartResult cart={cart}></CartResult>;\n    }\n    return result;\n  };\n\n  return (\n    <Cart>\n      {showCartItem(cart)},{showTotalAmount(cart)}\n    </Cart>\n  );\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(\n    PropTypes.shape({\n      product: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        inventory: PropTypes.number.isRequired,\n        rating: PropTypes.number.isRequired,\n      }),\n      quantity: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  onChangeMessage: PropTypes.func.isRequired,\n  onDeleteProductInCart: PropTypes.func.isRequired,\n  onUpdateProductInCart: PropTypes.func.isRequired,\n};\n\n// const mapDispatchToProps = (dispatch, props) => {\n//   return {\n//     onDeleteProductInCart: (product) => {\n//       dispatch(actDeleteProductInCart(product));\n//     },\n\n//     onChangeMessage: (message) => {\n//       dispatch(actChangeMessage(message));\n//     },\n\n//     onUpdateProductInCart: (product, quantity) => {\n//       dispatch(actUpdateProductInCart(product, quantity));\n//     },\n//   };\n// };\n\nexport default CartContainer;\n"]},"metadata":{},"sourceType":"module"}