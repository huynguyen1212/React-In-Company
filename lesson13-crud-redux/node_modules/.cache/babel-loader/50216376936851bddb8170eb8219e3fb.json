{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-crud-redux/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToogleForm = () => {\n      var {\n        itemEditing\n      } = this.props;\n\n      if (itemEditing && itemEditing.id !== \"\") {} else {\n        this.props.onToggleForm();\n      }\n\n      this.props.onClearTask({\n        id: \"\",\n        name: \"\",\n        status: false\n      });\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onUpdate = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n      var tasksEditing = tasks[index];\n      this.setState({\n        tasksEditing: tasksEditing\n      });\n      this.onShowForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    this.state = {\n      tasksEditing: null,\n      filter: {\n        name: \"\",\n        status: -1\n      },\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1\n    };\n  }\n\n  render() {\n    var {\n      // filter,\n      // keyword,\n      sortBy,\n      sortValue\n    } = this.state;\n    var {\n      isDisplayForm\n    } = this.props; // if (filter) {\n    //   if (filter.name) {\n    //     tasks = tasks.filter((task) => {\n    //       return task.name.toLowerCase().indexOf(filter.name) !== -1;\n    //     });\n    //   }\n    //   tasks = tasks.filter((task) => {\n    //     if (filter.status === -1) {\n    //       return task;\n    //     } else {\n    //       return task.status === (filter.status === 1 ? true : false);\n    //     }\n    //   });\n    // }\n    // if (keyword) {\n    //   tasks = tasks.filter((task) => {\n    //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n    //   });\n    // }\n    // if (sortBy === \"name\") {\n    //   tasks.sort((a, b) => {\n    //     if (a.name > b.name) return sortValue;\n    //     else if (a.name < b.name) return -sortValue;\n    //     else return 0;\n    //   });\n    // } else {\n    //   tasks.sort((a, b) => {\n    //     if (a.status > b.status) return -sortValue;\n    //     else if (a.status < b.status) return sortValue;\n    //     else return 0;\n    //   });\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Qu\\u1EA3n l\\xED c\\xF4ng vi\\u1EC7c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n          children: /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onToogleForm,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), \" Thêm Công Việc\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskControl, {\n            onSearch: this.onSearch,\n            onSort: this.onSort,\n            sortBy: sortBy,\n            sortValue: sortValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n            onUpdate: this.onUpdate,\n            onFilter: this.onFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: task => {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-crud-redux/src/App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","FontAwesomeIcon","faPlus","connect","actions","App","constructor","props","onToogleForm","itemEditing","id","onToggleForm","onClearTask","name","status","onShowForm","setState","isDisplayForm","onUpdate","tasks","state","index","findIndex","tasksEditing","onFilter","filterName","filterStatus","parseInt","filter","toLowerCase","onSearch","keyword","onSort","sortBy","sortValue","render","mapStateToProps","mapDispatchToProps","dispatch","toggleForm","task","editTask","onOpenForm","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasksEditing: null,\n      filter: {\n        name: \"\",\n        status: -1,\n      },\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1,\n    };\n  }\n\n  onToogleForm = () => {\n    var { itemEditing } = this.props;\n    if (itemEditing && itemEditing.id !== \"\") {\n    } else {\n      this.props.onToggleForm();\n    }\n    this.props.onClearTask({\n      id: \"\",\n      name: \"\",\n      status: false,\n    });\n  };\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var tasksEditing = tasks[index];\n    this.setState({\n      tasksEditing: tasksEditing,\n    });\n    this.onShowForm();\n  };\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n      },\n    });\n  };\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword: keyword,\n    });\n  };\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy: sortBy,\n      sortValue: sortValue,\n    });\n  };\n\n  render() {\n    var {\n      // filter,\n      // keyword,\n      sortBy,\n      sortValue,\n    } = this.state;\n    var { isDisplayForm } = this.props;\n    // if (filter) {\n    //   if (filter.name) {\n    //     tasks = tasks.filter((task) => {\n    //       return task.name.toLowerCase().indexOf(filter.name) !== -1;\n    //     });\n    //   }\n    //   tasks = tasks.filter((task) => {\n    //     if (filter.status === -1) {\n    //       return task;\n    //     } else {\n    //       return task.status === (filter.status === 1 ? true : false);\n    //     }\n    //   });\n    // }\n    // if (keyword) {\n    //   tasks = tasks.filter((task) => {\n    //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n    //   });\n    // }\n    // if (sortBy === \"name\") {\n    //   tasks.sort((a, b) => {\n    //     if (a.name > b.name) return sortValue;\n    //     else if (a.name < b.name) return -sortValue;\n    //     else return 0;\n    //   });\n    // } else {\n    //   tasks.sort((a, b) => {\n    //     if (a.status > b.status) return -sortValue;\n    //     else if (a.status < b.status) return sortValue;\n    //     else return 0;\n    //   });\n    // }\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản lí công việc</h1> <hr />\n        </div>\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n            }\n          >\n            <TaskForm />\n          </div>\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onToogleForm}\n            >\n              <FontAwesomeIcon icon={faPlus} />\n              {\" Thêm Công Việc\"}\n            </button>\n\n            <TaskControl\n              onSearch={this.onSearch}\n              onSort={this.onSort}\n              sortBy={sortBy}\n              sortValue={sortValue}\n            />\n\n            <TaskList onUpdate={this.onUpdate} onFilter={this.onFilter} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}