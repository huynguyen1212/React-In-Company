{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\n\ns4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\ngenerateID = () => {\n  return this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4();\n};\n\nvar data = JSON.parse(localStorage.getItem(\"tasks\"));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      console.log(action);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-crud-redux/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","generateID","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;;AAEAC,EAAE,GAAG,MAAM;AACT,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EACJC,QADI,CACK,EADL,EAEJC,SAFI,CAEM,CAFN,CAAP;AAGD,CAJD;;AAMAC,UAAU,GAAG,MAAM;AACjB,SACE,KAAKN,EAAL,KACA,KAAKA,EAAL,EADA,GAEA,GAFA,GAGA,KAAKA,EAAL,EAHA,GAIA,GAJA,GAKA,KAAKA,EAAL,EALA,GAMA,GANA,GAOA,KAAKA,EAAL,EAPA,GAQA,KAAKA,EAAL,EATF;AAWD,CAZD;;AAaA,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,KAAK,CAACkB,QAAX;AACE,aAAOH,KAAP;;AACF,SAAKf,KAAK,CAACmB,QAAX;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,aAAOD,KAAP;;AACF;AACE,aAAOA,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,SAAf","sourcesContent":["import * as types from \"../constants/ActionTypes\";\n\ns4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n};\n\ngenerateID = () => {\n  return (\n    this.s4() +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    this.s4()\n  );\n};\nvar data = JSON.parse(localStorage.getItem(\"tasks\"));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n    case types.ADD_TASK:\n      console.log(action);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;\n"]},"metadata":{},"sourceType":"module"}