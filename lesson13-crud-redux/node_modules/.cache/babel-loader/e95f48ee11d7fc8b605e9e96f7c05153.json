{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\n\nvar s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nvar generateID = () => {\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4();\n};\n\nvar data = JSON.parse(localStorage.getItem(\"tasks\"));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: generateID(),\n        name: action.task.name,\n        status: action.task.status === \"true\" ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-crud-redux/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","generateID","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","id","name","task","status","push","setItem","stringify"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;;AAEA,IAAIC,EAAE,GAAG,MAAM;AACb,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EACJC,QADI,CACK,EADL,EAEJC,SAFI,CAEM,CAFN,CAAP;AAGD,CAJD;;AAMA,IAAIC,UAAU,GAAG,MAAM;AACrB,SAAON,EAAE,KAAKA,EAAE,EAAT,GAAc,GAAd,GAAoBA,EAAE,EAAtB,GAA2B,GAA3B,GAAiCA,EAAE,EAAnC,GAAwC,GAAxC,GAA8CA,EAAE,EAAhD,GAAqDA,EAAE,EAA9D;AACD,CAFD;;AAGA,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,KAAK,CAACkB,QAAX;AACE,aAAOH,KAAP;;AACF,SAAKf,KAAK,CAACmB,QAAX;AACE,UAAIC,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEd,UAAU,EADF;AAEZe,QAAAA,IAAI,EAAEN,MAAM,CAACO,IAAP,CAAYD,IAFN;AAGZE,QAAAA,MAAM,EAAER,MAAM,CAACO,IAAP,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,IAAhC,GAAuC;AAHnC,OAAd;AAKAT,MAAAA,KAAK,CAACU,IAAN,CAAWL,OAAX;AACAT,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeZ,KAAf,CAA9B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACF;AACE,aAAOA,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,SAAf","sourcesContent":["import * as types from \"../constants/ActionTypes\";\n\nvar s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n};\n\nvar generateID = () => {\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4();\n};\nvar data = JSON.parse(localStorage.getItem(\"tasks\"));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n    case types.ADD_TASK:\n      var newTask = {\n        id: generateID(),\n        name: action.task.name,\n        status: action.task.status === \"true\" ? true : false,\n      };\n      state.push(newTask);\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;\n"]},"metadata":{},"sourceType":"module"}