{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-crud-redux/src/components/TaskList.js\";\nimport React, { Component } from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\nimport { filter } from \"lodash\";\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n      var filter = {\n        name: name === \"filterName\" ? value : this.state.filterName,\n        status: name === \"filterStatus\" ? value : this.state.filterStatus\n      };\n      this.props.onFilterTable(filter);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    var {\n      tasks,\n      filterTable\n    } = this.props;\n    var {\n      filterName,\n      filterStatus\n    } = this.state;\n\n    if (filterTable.name) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterTable.name) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterTable.status === -1) {\n        return task;\n      } else {\n        return task.status === (filterTable.status === 1 ? true : false);\n      }\n    });\n    var elmTask = tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(TaskItem, {\n        index: index,\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-15\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"STT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"T\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Tr\\u1EA1ng Th\\xE1i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"H\\xE0nh \\u0110\\u1ED9ng\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"filterName\",\n                  value: filterName,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  name: \"filterStatus\",\n                  value: filterStatus,\n                  onChange: this.onChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: -1,\n                    children: \"T\\u1EA5t C\\u1EA3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 0,\n                    children: \"\\u1EA8n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 1,\n                    children: \"K\\xEDch ho\\u1EA1t\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), elmTask]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    filterTable: state.filterTable,\n    keyword: state.search\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTable: filter => {\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-crud-redux/src/components/TaskList.js"],"names":["React","Component","TaskItem","connect","actions","filter","TaskList","constructor","props","onChange","event","target","name","value","state","filterName","status","filterStatus","onFilterTable","setState","render","tasks","filterTable","task","toLowerCase","indexOf","elmTask","map","index","id","mapStateToProps","keyword","search","mapDispatchToProps","dispatch","filterTask"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\nimport { filter } from \"lodash\";\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1,\n    };\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    var filter = {\n      name: name === \"filterName\" ? value : this.state.filterName,\n      status: name === \"filterStatus\" ? value : this.state.filterStatus,\n    };\n    this.props.onFilterTable(filter);\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    var { tasks, filterTable } = this.props;\n    var { filterName, filterStatus } = this.state;\n    if (filterTable.name) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(filterTable.name) !== -1;\n      });\n    }\n    tasks = tasks.filter((task) => {\n      if (filterTable.status === -1) {\n        return task;\n      } else {\n        return task.status === (filterTable.status === 1 ? true : false);\n      }\n    });\n    var elmTask = tasks.map((task, index) => {\n      return <TaskItem key={task.id} index={index} task={task} />;\n    });\n    return (\n      <div className=\"row mt-15\">\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <table className=\"table table-bordered table-hover\">\n            <thead>\n              <tr>\n                <th className=\"text-center\">STT</th>\n                <th className=\"text-center\">Tên</th>\n                <th className=\"text-center\">Trạng Thái</th>\n                <th className=\"text-center\">Hành Động</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td></td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"filterName\"\n                    value={filterName}\n                    onChange={this.onChange}\n                  />\n                </td>\n                <td>\n                  <select\n                    className=\"form-control\"\n                    name=\"filterStatus\"\n                    value={filterStatus}\n                    onChange={this.onChange}\n                  >\n                    <option value={-1}>Tất Cả</option>\n                    <option value={0}>Ẩn</option>\n                    <option value={1}>Kích hoạt</option>\n                  </select>\n                </td>\n                <td></td>\n              </tr>\n              {elmTask}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks,\n    filterTable: state.filterTable,\n    keyword: state.search\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTable: (filter) => {\n      dispatch(actions.filterTask(filter));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n"]},"metadata":{},"sourceType":"module"}