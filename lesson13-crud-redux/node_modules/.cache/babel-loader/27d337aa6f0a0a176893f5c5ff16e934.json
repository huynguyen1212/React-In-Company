{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson10-mytest/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { filter, findIndex } from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToogleForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onSubmit = data => {\n      var {\n        tasks\n      } = this.state;\n      data.id = this.generateID();\n      tasks.push(data);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      }\n    };\n\n    this.findIndex = id => {\n      var {\n        tasks\n      } = this.state;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      }\n\n      this.onCloseForm();\n    };\n\n    this.onUpdate = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n      var tasksEditing = tasks[index];\n      this.setState({\n        tasksEditing: tasksEditing\n      });\n      this.onShowForm();\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      tasksEditing: null\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4();\n  }\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm\n    } = this.state;\n    var elmTaskForm = isDisplayForm ? /*#__PURE__*/_jsxDEV(TaskForm, {\n      onCloseForm: this.onCloseForm,\n      onSubmit: this.onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this) : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Qu\\u1EA3n l\\xED c\\xF4ng vi\\u1EC7c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n          children: elmTaskForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onToogleForm,\n            children: \" Thêm Công Việc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskControl, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: tasks,\n            onUpdateStatus: this.onUpdateStatus,\n            onDelete: this.onDelete,\n            onUpdate: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-mytest/src/App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","filter","findIndex","FontAwesomeIcon","faPlus","App","constructor","props","onToogleForm","setState","isDisplayForm","state","onCloseForm","onShowForm","onSubmit","data","tasks","id","generateID","push","localStorage","setItem","JSON","stringify","onUpdateStatus","index","status","result","forEach","task","onDelete","splice","onUpdate","tasksEditing","componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","elmTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { filter, findIndex } from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      tasksEditing: null,\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks,\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  generateID() {\n    return (\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      this.s4()\n    );\n  }\n\n  onToogleForm = () => {\n    this.setState({\n      isDisplayForm: !this.state.isDisplayForm,\n    });\n  };\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n    data.id = this.generateID();\n    tasks.push(data);\n    this.setState({\n      tasks: tasks,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  };\n\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    this.onCloseForm();\n  };\n\n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var tasksEditing = tasks[index];\n    this.setState({\n      tasksEditing: tasksEditing,\n    });\n    this.onShowForm();\n  };\n\n  render() {\n    var { tasks, isDisplayForm } = this.state;\n    var elmTaskForm = isDisplayForm ? (\n      <TaskForm onCloseForm={this.onCloseForm} onSubmit={this.onSubmit} />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản lí công việc</h1> <hr />\n        </div>\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n            }\n          >\n            {elmTaskForm}\n          </div>\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onToogleForm}\n            >\n              {\" Thêm Công Việc\"}\n            </button>\n\n            <TaskControl />\n\n            <TaskList\n              tasks={tasks}\n              onUpdateStatus={this.onUpdateStatus}\n              onDelete={this.onDelete}\n              onUpdate={this.onUpdate}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}