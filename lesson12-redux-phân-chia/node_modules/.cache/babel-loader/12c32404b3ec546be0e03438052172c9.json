{"ast":null,"code":"import { values } from \"lodash\";\nimport { createStore } from \"redux\";\nvar initilState = {\n  status: false,\n  sort: {\n    by: \"name\",\n    value: 1\n  }\n};\n\nvar myReducer = (state = initilState, action) => {\n  if (action.type === \"TOOGLE_STATUS\") {\n    state.status = !state.status;\n    return state;\n  }\n\n  if (action.type === \"SORT\") {\n    var {\n      by,\n      value\n    } = action.sort;\n    var {\n      status\n    } = state;\n    return {\n      status: status,\n      sort: {\n        by: by,\n        value: value\n      }\n    }; // state.sort = {\n    //   by: action.sort.by,\n    //   value: action.sort.value,\n    // };\n  }\n\n  return state; //đã trả về một state thì k trả về một state nào nữa\n};\n\nconst store = createStore(myReducer);\nconsole.log(\"Default : \", store.getState()); // thực hiện thay đổi trạng thái\n\nvar action = {\n  type: \"TOOGLE_STATUS\"\n};\nstore.dispatch(action);\nconsole.log(\"TOOGLE_STATUS : \", store.getState()); // thực hiện sort theo name từ Z -> A\n\nvar sortAction = {\n  type: \"SORT\",\n  sort: {\n    by: \"name\",\n    value: -1\n  }\n};\nstore.dispatch(sortAction);\nconsole.log(\"SORT : \", store.getState());","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/trainning/demo.js"],"names":["values","createStore","initilState","status","sort","by","value","myReducer","state","action","type","store","console","log","getState","dispatch","sortAction"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,KADQ;AAEhBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,MADA;AAEJC,IAAAA,KAAK,EAAE;AAFH;AAFU,CAAlB;;AAQA,IAAIC,SAAS,GAAG,CAACC,KAAK,GAAGN,WAAT,EAAsBO,MAAtB,KAAiC;AAC/C,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnCF,IAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACA,WAAOK,KAAP;AACD;;AACD,MAAIC,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;AAC1B,QAAI;AAAEL,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBG,MAAM,CAACL,IAA3B;AACA,QAAI;AAAED,MAAAA;AAAF,QAAaK,KAAjB;AACA,WAAO;AACLL,MAAAA,MAAM,EAAEA,MADH;AAELC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAEA,EADA;AAEJC,QAAAA,KAAK,EAAEA;AAFH;AAFD,KAAP,CAH0B,CAU1B;AACA;AACA;AACA;AACD;;AACD,SAAOE,KAAP,CApB+C,CAsB/C;AACD,CAvBD;;AAyBA,MAAMG,KAAK,GAAGV,WAAW,CAACM,SAAD,CAAzB;AACAK,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAAK,CAACG,QAAN,EAA1B,E,CAEA;;AACA,IAAIL,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AADK,CAAb;AAGAC,KAAK,CAACI,QAAN,CAAeN,MAAf;AACAG,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAK,CAACG,QAAN,EAAhC,E,CAEA;;AACA,IAAIE,UAAU,GAAG;AACfN,EAAAA,IAAI,EAAE,MADS;AAEfN,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,MADA;AAEJC,IAAAA,KAAK,EAAE,CAAC;AAFJ;AAFS,CAAjB;AAOAK,KAAK,CAACI,QAAN,CAAeC,UAAf;AACAJ,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAK,CAACG,QAAN,EAAvB","sourcesContent":["import { values } from \"lodash\";\nimport { createStore } from \"redux\";\n\nvar initilState = {\n  status: false,\n  sort: {\n    by: \"name\",\n    value: 1,\n  },\n};\n\nvar myReducer = (state = initilState, action) => {\n  if (action.type === \"TOOGLE_STATUS\") {\n    state.status = !state.status;\n    return state;\n  }\n  if (action.type === \"SORT\") {\n    var { by, value } = action.sort;\n    var { status } = state;\n    return {\n      status: status,\n      sort: {\n        by: by,\n        value: value,\n      },\n    };\n    // state.sort = {\n    //   by: action.sort.by,\n    //   value: action.sort.value,\n    // };\n  }\n  return state;\n\n  //đã trả về một state thì k trả về một state nào nữa\n};\n\nconst store = createStore(myReducer);\nconsole.log(\"Default : \", store.getState());\n\n// thực hiện thay đổi trạng thái\nvar action = {\n  type: \"TOOGLE_STATUS\",\n};\nstore.dispatch(action);\nconsole.log(\"TOOGLE_STATUS : \", store.getState());\n\n// thực hiện sort theo name từ Z -> A\nvar sortAction = {\n  type: \"SORT\",\n  sort: {\n    by: \"name\",\n    value: -1,\n  },\n};\nstore.dispatch(sortAction);\nconsole.log(\"SORT : \", store.getState());\n"]},"metadata":{},"sourceType":"module"}