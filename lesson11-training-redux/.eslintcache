[{"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/App.js":"1","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/components/TaskControlSort.js":"2","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/components/TaskControl.js":"3","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/trainning/demo.js":"4","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/index.js":"5","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/components/TaskForm.js":"6","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/components/TaskControlSearch.js":"7"},{"size":6080,"mtime":1607881001479,"results":"8","hashOfConfig":"9"},{"size":2559,"mtime":1606798467646,"results":"10","hashOfConfig":"9"},{"size":536,"mtime":1606796848568,"results":"11","hashOfConfig":"9"},{"size":87,"mtime":1607862740780,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1606527084382,"results":"13","hashOfConfig":"9"},{"size":3048,"mtime":1607116030339,"results":"14","hashOfConfig":"9"},{"size":1288,"mtime":1606765764617,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"8ks6t6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/App.js",["32","33"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { filter, findIndex } from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n// import demo from \"./trainning/demo\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      tasksEditing: null,\n      filter: {\n        name: \"\",\n        status: -1,\n      },\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1,\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks,\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  generateID() {\n    return (\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      this.s4()\n    );\n  }\n\n  onToogleForm = () => {\n    if (this.state.isDisplayForm && this.state.tasksEditing) {\n      this.setState({\n        isDisplayForm: true,\n        tasksEditing: null,\n      });\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        tasksEditing: null,\n      });\n    }\n  };\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n    if (data.id === \"\") {\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks: tasks,\n      tasksEditing: null,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  };\n\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    this.onCloseForm();\n  };\n\n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var tasksEditing = tasks[index];\n    this.setState({\n      tasksEditing: tasksEditing,\n    });\n    this.onShowForm();\n  };\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n      },\n    });\n  };\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword: keyword,\n    });\n  };\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy: sortBy,\n      sortValue: sortValue,\n    });\n  };\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm,\n      tasksEditing,\n      filter,\n      keyword,\n      sortBy,\n      sortValue,\n    } = this.state;\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((task) => {\n        if (filter.status === -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n    if (keyword) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n    if (sortBy === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;\n        else if (a.status < b.status) return sortValue;\n        else return 0;\n      });\n    }\n    var elmTaskForm = isDisplayForm ? (\n      <TaskForm\n        onCloseForm={this.onCloseForm}\n        onSubmit={this.onSubmit}\n        task={tasksEditing}\n      />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản lí công việc</h1> <hr />\n        </div>\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n            }\n          >\n            {elmTaskForm}\n          </div>\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onToogleForm}\n            >\n              <FontAwesomeIcon icon={faPlus} />\n              {\" Thêm Công Việc\"}\n            </button>\n\n            <TaskControl\n              onSearch={this.onSearch}\n              onSort={this.onSort}\n              sortBy={sortBy}\n              sortValue={sortValue}\n            />\n\n            <TaskList\n              tasks={tasks}\n              onUpdateStatus={this.onUpdateStatus}\n              onDelete={this.onDelete}\n              onUpdate={this.onUpdate}\n              onFilter={this.onFilter}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/components/TaskControlSort.js",["34","35","36","37"],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/components/TaskControl.js",[],["38","39"],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/trainning/demo.js",[],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/index.js",[],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/components/TaskForm.js",[],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson11-training-redux/src/components/TaskControlSearch.js",[],{"ruleId":"40","severity":1,"message":"41","line":6,"column":10,"nodeType":"42","messageId":"43","endLine":6,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":6,"column":18,"nodeType":"42","messageId":"43","endLine":6,"endColumn":27},{"ruleId":"45","severity":1,"message":"46","line":26,"column":15,"nodeType":"47","endLine":33,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":38,"column":15,"nodeType":"47","endLine":45,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":51,"column":15,"nodeType":"47","endLine":58,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":63,"column":15,"nodeType":"47","endLine":70,"endColumn":16},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},"no-unused-vars","'filter' is defined but never used.","Identifier","unusedVar","'findIndex' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-global-assign","no-unsafe-negation"]