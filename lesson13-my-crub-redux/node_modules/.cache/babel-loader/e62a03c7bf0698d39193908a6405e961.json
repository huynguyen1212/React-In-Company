{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-my-crub-redux/src/components/TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nfunction TaskForm(props) {\n  _s();\n\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(false);\n  useEffect(() => {\n    if (props && props.task) {\n      setId(props.task.id);\n      setName(props.task.name);\n      setStatus(props.task.status);\n    } else if (!props.task) {\n      setId(\"\");\n      setName(\"\");\n      setStatus(false);\n    }\n  }, [props]);\n\n  const onCloseForm = () => {\n    props.onCloseForm();\n  };\n\n  let history = useHistory();\n\n  const onChange = event => {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n    console.log(name, value);\n\n    if (name === \"status\") {\n      value = target.value === \"true\" ? true : false;\n      setStatus(value);\n    }\n\n    if (name === \"name\") {\n      setName(value);\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    props.onSubmit({\n      id: id,\n      name: name,\n      status: status\n    });\n    history.push(\"/\");\n    onCloseForm();\n    onClear();\n  };\n\n  const onClear = () => {\n    setName(\"\");\n    setStatus(false);\n    history.push(\"/\");\n  };\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel panel-warning\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"panel-title\",\n        children: [id ? \"Cập nhập công việc \" : \"Thêm Công Việc \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faWindowClose,\n          onClick: onCloseForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"T\\xEAn : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            value: state.name,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tr\\u1EA1ng th\\xE1i : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"status\",\n          className: \"form-control\",\n          value: state.status,\n          onChange: onChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"K\\xEDch ho\\u1EA1t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"\\u1EA8n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-warning\",\n            children: \"L\\u01B0u l\\u1EA1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: onClear,\n            children: \"H\\u1EE7y b\\u1ECF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskForm, \"+8G5scMDRlfg5suTtNRsHs+t/rM=\", true);\n\n_c = TaskForm;\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onSaveTask: task => {\n      dispatch(actions.saveTask(task));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-my-crub-redux/src/components/TaskForm.js"],"names":["React","useState","FontAwesomeIcon","faWindowClose","connect","actions","TaskForm","props","id","setId","name","setName","status","setStatus","useEffect","task","onCloseForm","history","useHistory","onChange","event","target","value","console","log","onSubmit","preventDefault","push","onClear","register","handleSubmit","useForm","onSave","state","mapStateToProps","isDisplayForm","itemEditing","mapDispatchToProps","dispatch","onSaveTask","saveTask","closeForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nfunction TaskForm(props) {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(false);\n\n  useEffect(() => {\n    if (props && props.task) {\n      setId(props.task.id);\n      setName(props.task.name);\n      setStatus(props.task.status);\n    } else if (!props.task) {\n      setId(\"\");\n      setName(\"\");\n      setStatus(false);\n    }\n  }, [props]);\n\n  const onCloseForm = () => {\n    props.onCloseForm();\n  };\n  let history = useHistory();\n\n  const onChange = (event) => {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n    console.log(name, value);\n    if (name === \"status\") {\n      value = target.value === \"true\" ? true : false;\n      setStatus(value);\n    }\n    if (name === \"name\") {\n      setName(value);\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    props.onSubmit({ id: id, name: name, status: status });\n    history.push(\"/\");\n    onCloseForm();\n    onClear();\n  };\n\n  const onClear = () => {\n    setName(\"\");\n    setStatus(false);\n    history.push(\"/\");\n  };\n\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <div className=\"panel panel-warning\">\n      <div className=\"panel-heading\">\n        <h3 className=\"panel-title\">\n          {id ? \"Cập nhập công việc \" : \"Thêm Công Việc \"}\n          <FontAwesomeIcon icon={faWindowClose} onClick={onCloseForm} />\n        </h3>\n      </div>\n      <div className=\"panel-body\">\n        <form onSubmit={onSave}>\n          <div className=\"form-group\">\n            <label>Tên : </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              value={state.name}\n              onChange={onChange}\n            />\n          </div>\n          <label>Trạng thái : </label>\n          <select\n            name=\"status\"\n            className=\"form-control\"\n            value={state.status}\n            onChange={onChange}\n          >\n            <option value=\"true\">Kích hoạt</option>\n            <option value=\"false\">Ẩn</option>\n          </select>\n          <br />\n          <div className=\"text-center\">\n            <button type=\"submit\" className=\"btn btn-warning\">\n              Lưu lại\n            </button>\n            &nbsp;\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={onClear}\n            >\n              Hủy bỏ\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onSaveTask: (task) => {\n      dispatch(actions.saveTask(task));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\n"]},"metadata":{},"sourceType":"module"}