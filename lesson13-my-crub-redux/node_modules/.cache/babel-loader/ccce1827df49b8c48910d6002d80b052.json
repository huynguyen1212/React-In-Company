{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-my-crub-redux/src/components/TaskList.js\";\nimport React, { Component } from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n      var filter = {\n        name: name === \"filterName\" ? value : this.state.filterName,\n        status: name === \"filterStatus\" ? value : this.state.filterStatus\n      };\n      this.props.onFilterTable(filter);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    var {\n      tasks,\n      filterTable,\n      keyword,\n      sort\n    } = this.props;\n    var {\n      filterName,\n      filterStatus\n    } = this.state;\n\n    if (filterTable.name) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterTable.name) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterTable.status === -1) {\n        return task;\n      } else {\n        return task.status === (filterTable.status === 1 ? true : false);\n      }\n    });\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    if (sort.by === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sort.value;else if (a.name < b.name) return -sort.value;else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sort.value;else if (a.status < b.status) return sort.value;else return 0;\n      });\n    }\n\n    var elmTask = tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(TaskItem, {\n        index: index,\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-15\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"STT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"T\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Tr\\u1EA1ng Th\\xE1i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"H\\xE0nh \\u0110\\u1ED9ng\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"filterName\",\n                  value: filterName,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  name: \"filterStatus\",\n                  value: filterStatus,\n                  onChange: this.onChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: -1,\n                    children: \"T\\u1EA5t C\\u1EA3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 0,\n                    children: \"\\u1EA8n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 1,\n                    children: \"K\\xEDch ho\\u1EA1t\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), elmTask]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    filterTable: state.filterTable,\n    keyword: state.search,\n    sort: state.sort\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTable: filter => {\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-my-crub-redux/src/components/TaskList.js"],"names":["React","Component","TaskItem","connect","actions","TaskList","constructor","props","onChange","event","target","name","value","filter","state","filterName","status","filterStatus","onFilterTable","setState","render","tasks","filterTable","keyword","sort","task","toLowerCase","indexOf","by","a","b","elmTask","map","index","id","mapStateToProps","search","mapDispatchToProps","dispatch","filterTask"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1,\n    };\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    var filter = {\n      name: name === \"filterName\" ? value : this.state.filterName,\n      status: name === \"filterStatus\" ? value : this.state.filterStatus,\n    };\n    this.props.onFilterTable(filter);\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    var { tasks, filterTable, keyword, sort } = this.props;\n    var { filterName, filterStatus } = this.state;\n\n    if (filterTable.name) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(filterTable.name) !== -1;\n      });\n    }\n    tasks = tasks.filter((task) => {\n      if (filterTable.status === -1) {\n        return task;\n      } else {\n        return task.status === (filterTable.status === 1 ? true : false);\n      }\n    });\n\n    if (keyword) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    if (sort.by === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sort.value;\n        else if (a.name < b.name) return -sort.value;\n        else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sort.value;\n        else if (a.status < b.status) return sort.value;\n        else return 0;\n      });\n    }\n\n    var elmTask = tasks.map((task, index) => {\n      return <TaskItem key={task.id} index={index} task={task} />;\n    });\n    return (\n      <div className=\"row mt-15\">\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <table className=\"table table-bordered table-hover\">\n            <thead>\n              <tr>\n                <th className=\"text-center\">STT</th>\n                <th className=\"text-center\">Tên</th>\n                <th className=\"text-center\">Trạng Thái</th>\n                <th className=\"text-center\">Hành Động</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td></td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"filterName\"\n                    value={filterName}\n                    onChange={this.onChange}\n                  />\n                </td>\n                <td>\n                  <select\n                    className=\"form-control\"\n                    name=\"filterStatus\"\n                    value={filterStatus}\n                    onChange={this.onChange}\n                  >\n                    <option value={-1}>Tất Cả</option>\n                    <option value={0}>Ẩn</option>\n                    <option value={1}>Kích hoạt</option>\n                  </select>\n                </td>\n                <td></td>\n              </tr>\n              {elmTask}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks,\n    filterTable: state.filterTable,\n    keyword: state.search,\n    sort: state.sort,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTable: (filter) => {\n      dispatch(actions.filterTask(filter));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n"]},"metadata":{},"sourceType":"module"}