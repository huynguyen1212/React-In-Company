{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-crud-redux/src/components/TaskItem.js\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport * as actions from \"../actions/index\";\nimport { connect } from \"react-redux\";\n\nclass TaskItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onUpdateStatus = () => {\n      this.props.onUpdateStatus(this.props.task.id);\n    };\n\n    this.onDelete = () => {\n      this.props.onDeleteTask(this.props.task.id);\n      this.props.onCloseForm();\n    };\n\n    this.onUpdate = () => {\n      // this.props.onUpdate(this.props.task.id);\n      this.props.onOpenForm();\n    };\n  }\n\n  render() {\n    var {\n      task,\n      index\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.status ? \"label label-danger\" : \"label label-success\",\n          onClick: this.onUpdateStatus,\n          children: task.status ? \"Kích hoạt\" : \"Ẩn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning\",\n          onClick: this.onUpdate,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPencilAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \" Sửa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: this.onDelete,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \" Xóa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: id => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: id => {\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-crud-redux/src/components/TaskItem.js"],"names":["React","Component","FontAwesomeIcon","faPencilAlt","faTrash","actions","connect","TaskItem","onUpdateStatus","props","task","id","onDelete","onDeleteTask","onCloseForm","onUpdate","onOpenForm","render","index","name","status","mapStateToProps","state","mapDispatchToProps","dispatch","updateStatus","deleteTask","closeForm","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport * as actions from \"../actions/index\";\nimport { connect } from \"react-redux\";\n\nclass TaskItem extends Component {\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id);\n  };\n\n  onDelete = () => {\n    this.props.onDeleteTask(this.props.task.id);\n    this.props.onCloseForm();\n  };\n\n  onUpdate = () => {\n    // this.props.onUpdate(this.props.task.id);\n    this.props.onOpenForm();\n  };\n\n  render() {\n    var { task, index } = this.props;\n    return (\n      <tr>\n        <td>{index + 1}</td>\n        <td>{task.name}</td>\n        <td className=\"text-center\">\n          <span\n            className={\n              task.status ? \"label label-danger\" : \"label label-success\"\n            }\n            onClick={this.onUpdateStatus}\n          >\n            {task.status ? \"Kích hoạt\" : \"Ẩn\"}\n          </span>\n        </td>\n        <td className=\"text-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={this.onUpdate}\n          >\n            <FontAwesomeIcon icon={faPencilAlt} />\n            {\" Sửa\"}\n          </button>\n          &nbsp;\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={this.onDelete}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n            {\" Xóa\"}\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: (id) => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: (id) => {\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\n"]},"metadata":{},"sourceType":"module"}