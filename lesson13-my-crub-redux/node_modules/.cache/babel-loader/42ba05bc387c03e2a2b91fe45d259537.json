{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-crud-redux/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    this.state = {\n      sortBy: \"name\",\n      sortValue: 1\n    };\n  }\n\n  render() {\n    var {\n      sortBy,\n      sortValue\n    } = this.state;\n    var {\n      isDisplayForm\n    } = this.props; // if (sortBy === \"name\") {\n    //   tasks.sort((a, b) => {\n    //     if (a.name > b.name) return sortValue;\n    //     else if (a.name < b.name) return -sortValue;\n    //     else return 0;\n    //   });\n    // } else {\n    //   tasks.sort((a, b) => {\n    //     if (a.status > b.status) return -sortValue;\n    //     else if (a.status < b.status) return sortValue;\n    //     else return 0;\n    //   });\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Qu\\u1EA3n l\\xED c\\xF4ng vi\\u1EC7c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n          children: /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onToogleForm,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), \" Thêm Công Việc\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskControl, {\n            onSort: this.onSort,\n            sortBy: sortBy,\n            sortValue: sortValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: task => {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-crud-redux/src/App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","FontAwesomeIcon","faPlus","connect","actions","App","constructor","props","onShowForm","setState","isDisplayForm","onSort","sortBy","sortValue","state","render","onToogleForm","mapStateToProps","itemEditing","mapDispatchToProps","dispatch","onToggleForm","toggleForm","onClearTask","task","editTask","onOpenForm","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBy: \"name\",\n      sortValue: 1,\n    };\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy: sortBy,\n      sortValue: sortValue,\n    });\n  };\n\n  render() {\n    var { sortBy, sortValue } = this.state;\n    var { isDisplayForm } = this.props;\n    // if (sortBy === \"name\") {\n    //   tasks.sort((a, b) => {\n    //     if (a.name > b.name) return sortValue;\n    //     else if (a.name < b.name) return -sortValue;\n    //     else return 0;\n    //   });\n    // } else {\n    //   tasks.sort((a, b) => {\n    //     if (a.status > b.status) return -sortValue;\n    //     else if (a.status < b.status) return sortValue;\n    //     else return 0;\n    //   });\n    // }\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản lí công việc</h1> <hr />\n        </div>\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n            }\n          >\n            <TaskForm />\n          </div>\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onToogleForm}\n            >\n              <FontAwesomeIcon icon={faPlus} />\n              {\" Thêm Công Việc\"}\n            </button>\n\n            <TaskControl\n              onSort={this.onSort}\n              sortBy={sortBy}\n              sortValue={sortValue}\n            />\n\n            <TaskList />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}