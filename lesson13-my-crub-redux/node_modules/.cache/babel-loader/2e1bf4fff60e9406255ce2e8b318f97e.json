{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-my-crub-redux/src/components/TaskItem.js\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport * as actions from \"../actions/index\";\nimport { connect } from \"react-redux\";\n\nfunction TaskItem(props) {\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id);\n  };\n\n  onDelete = () => {\n    this.props.onDeleteTask(this.props.task.id);\n    this.props.onCloseForm();\n  };\n\n  onUpdate = () => {\n    this.props.onOpenForm();\n    this.props.onEditTask(this.props.task);\n  };\n\n  var {\n    task,\n    index\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: task.status ? \"label label-danger\" : \"label label-success\",\n        onClick: this.onUpdateStatus,\n        children: task.status ? \"Kích hoạt\" : \"Ẩn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: this.onUpdate,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPencilAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \" Sửa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: this.onDelete,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" Xóa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TaskItem;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: id => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: id => {\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onEditTask: task => {\n      dispatch(actions.editTask(task));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-my-crub-redux/src/components/TaskItem.js"],"names":["React","useState","FontAwesomeIcon","faPencilAlt","faTrash","actions","connect","TaskItem","props","onUpdateStatus","task","id","onDelete","onDeleteTask","onCloseForm","onUpdate","onOpenForm","onEditTask","index","name","status","mapStateToProps","state","mapDispatchToProps","dispatch","updateStatus","deleteTask","closeForm","openForm","editTask"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport * as actions from \"../actions/index\";\nimport { connect } from \"react-redux\";\n\nfunction TaskItem(props) {\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id);\n  };\n\n  onDelete = () => {\n    this.props.onDeleteTask(this.props.task.id);\n    this.props.onCloseForm();\n  };\n\n  onUpdate = () => {\n    this.props.onOpenForm();\n    this.props.onEditTask(this.props.task);\n  };\n\n  var { task, index } = this.props;\n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>{task.name}</td>\n      <td className=\"text-center\">\n        <span\n          className={task.status ? \"label label-danger\" : \"label label-success\"}\n          onClick={this.onUpdateStatus}\n        >\n          {task.status ? \"Kích hoạt\" : \"Ẩn\"}\n        </span>\n      </td>\n      <td className=\"text-center\">\n        <button\n          type=\"button\"\n          className=\"btn btn-warning\"\n          onClick={this.onUpdate}\n        >\n          <FontAwesomeIcon icon={faPencilAlt} />\n          {\" Sửa\"}\n        </button>\n        &nbsp;\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={this.onDelete}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n          {\" Xóa\"}\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: (id) => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: (id) => {\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onEditTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\n"]},"metadata":{},"sourceType":"module"}