{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-crud-redux/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToogleForm = () => {\n      // if (this.state.isDisplayForm && this.state.tasksEditing) {\n      //   this.setState({\n      //     isDisplayForm: true,\n      //     tasksEditing: null,\n      //   });\n      // } else {\n      //   this.setState({\n      //     isDisplayForm: !this.state.isDisplayForm,\n      //     tasksEditing: null,\n      //   });\n      // }\n      this.props.onToggleForm();\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onDelete = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      }\n\n      this.onCloseForm();\n    };\n\n    this.onUpdate = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n      var tasksEditing = tasks[index];\n      this.setState({\n        tasksEditing: tasksEditing\n      });\n      this.onShowForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    this.state = {\n      tasksEditing: null,\n      filter: {\n        name: \"\",\n        status: -1\n      },\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1\n    };\n  }\n\n  render() {\n    var {\n      tasksEditing,\n      // filter,\n      // keyword,\n      sortBy,\n      sortValue\n    } = this.state;\n    var {\n      isDisplayForm\n    } = this.props; // if (filter) {\n    //   if (filter.name) {\n    //     tasks = tasks.filter((task) => {\n    //       return task.name.toLowerCase().indexOf(filter.name) !== -1;\n    //     });\n    //   }\n    //   tasks = tasks.filter((task) => {\n    //     if (filter.status === -1) {\n    //       return task;\n    //     } else {\n    //       return task.status === (filter.status === 1 ? true : false);\n    //     }\n    //   });\n    // }\n    // if (keyword) {\n    //   tasks = tasks.filter((task) => {\n    //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n    //   });\n    // }\n    // if (sortBy === \"name\") {\n    //   tasks.sort((a, b) => {\n    //     if (a.name > b.name) return sortValue;\n    //     else if (a.name < b.name) return -sortValue;\n    //     else return 0;\n    //   });\n    // } else {\n    //   tasks.sort((a, b) => {\n    //     if (a.status > b.status) return -sortValue;\n    //     else if (a.status < b.status) return sortValue;\n    //     else return 0;\n    //   });\n    // }\n\n    var elmTaskForm = isDisplayForm ? /*#__PURE__*/_jsxDEV(TaskForm, {\n      onCloseForm: this.onCloseForm,\n      task: tasksEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this) : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Qu\\u1EA3n l\\xED c\\xF4ng vi\\u1EC7c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n          children: elmTaskForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onToogleForm,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), \" Thêm Công Việc\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskControl, {\n            onSearch: this.onSearch,\n            onSort: this.onSort,\n            sortBy: sortBy,\n            sortValue: sortValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskList // tasks={tasks}\n          , {\n            onUpdateStatus: this.onUpdateStatus,\n            onDelete: this.onDelete,\n            onUpdate: this.onUpdate,\n            onFilter: this.onFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-crud-redux/src/App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","FontAwesomeIcon","faPlus","connect","actions","App","constructor","props","onToogleForm","onToggleForm","onCloseForm","setState","isDisplayForm","onShowForm","onDelete","id","tasks","state","index","findIndex","splice","localStorage","setItem","JSON","stringify","onUpdate","tasksEditing","onFilter","filterName","filterStatus","parseInt","filter","name","toLowerCase","status","onSearch","keyword","onSort","sortBy","sortValue","render","elmTaskForm","onUpdateStatus","mapStateToProps","mapDispatchToProps","dispatch","toggleForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasksEditing: null,\n      filter: {\n        name: \"\",\n        status: -1,\n      },\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1,\n    };\n  }\n\n  onToogleForm = () => {\n    // if (this.state.isDisplayForm && this.state.tasksEditing) {\n    //   this.setState({\n    //     isDisplayForm: true,\n    //     tasksEditing: null,\n    //   });\n    // } else {\n    //   this.setState({\n    //     isDisplayForm: !this.state.isDisplayForm,\n    //     tasksEditing: null,\n    //   });\n    // }\n    this.props.onToggleForm();\n  };\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  // onUpdateStatus = (id) => {\n  //   var { tasks } = this.state;\n  //   var index = this.findIndex(id);\n  //   if (index !== -1) {\n  //     tasks[index].status = !tasks[index].status;\n  //     this.setState({\n  //       tasks: tasks,\n  //     });\n  //     localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  //   }\n  // };\n\n  // findIndex = (id) => {\n  //   var { tasks } = this.state;\n  //   var result = -1;\n  //   tasks.forEach((task, index) => {\n  //     if (task.id === id) {\n  //       result = index;\n  //     }\n  //   });\n  //   return result;\n  // };\n\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    this.onCloseForm();\n  };\n\n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var tasksEditing = tasks[index];\n    this.setState({\n      tasksEditing: tasksEditing,\n    });\n    this.onShowForm();\n  };\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n      },\n    });\n  };\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword: keyword,\n    });\n  };\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy: sortBy,\n      sortValue: sortValue,\n    });\n  };\n\n  render() {\n    var {\n      tasksEditing,\n      // filter,\n      // keyword,\n      sortBy,\n      sortValue,\n    } = this.state;\n    var { isDisplayForm } = this.props;\n    // if (filter) {\n    //   if (filter.name) {\n    //     tasks = tasks.filter((task) => {\n    //       return task.name.toLowerCase().indexOf(filter.name) !== -1;\n    //     });\n    //   }\n    //   tasks = tasks.filter((task) => {\n    //     if (filter.status === -1) {\n    //       return task;\n    //     } else {\n    //       return task.status === (filter.status === 1 ? true : false);\n    //     }\n    //   });\n    // }\n    // if (keyword) {\n    //   tasks = tasks.filter((task) => {\n    //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n    //   });\n    // }\n    // if (sortBy === \"name\") {\n    //   tasks.sort((a, b) => {\n    //     if (a.name > b.name) return sortValue;\n    //     else if (a.name < b.name) return -sortValue;\n    //     else return 0;\n    //   });\n    // } else {\n    //   tasks.sort((a, b) => {\n    //     if (a.status > b.status) return -sortValue;\n    //     else if (a.status < b.status) return sortValue;\n    //     else return 0;\n    //   });\n    // }\n    var elmTaskForm = isDisplayForm ? (\n      <TaskForm onCloseForm={this.onCloseForm} task={tasksEditing} />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản lí công việc</h1> <hr />\n        </div>\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n            }\n          >\n            {elmTaskForm}\n          </div>\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onToogleForm}\n            >\n              <FontAwesomeIcon icon={faPlus} />\n              {\" Thêm Công Việc\"}\n            </button>\n\n            <TaskControl\n              onSearch={this.onSearch}\n              onSort={this.onSort}\n              sortBy={sortBy}\n              sortValue={sortValue}\n            />\n\n            <TaskList\n              // tasks={tasks}\n              onUpdateStatus={this.onUpdateStatus}\n              onDelete={this.onDelete}\n              onUpdate={this.onUpdate}\n              onFilter={this.onFilter}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm);\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}