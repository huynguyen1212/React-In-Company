{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/huynguyen/Desktop/Th\\u1EF1c t\\u1EADp/React-In-Company/lesson13-my-crub-redux/src/components/TaskItem.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nfunction TaskItem(props) {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const onUpdateStatus = () => {\n    dispatch(actions.updateStatus(props.task.id));\n  };\n\n  const onDelete = () => {\n    dispatch(actions.deleteTask(props.task.id));\n    dispatch(actions.closeForm());\n  };\n\n  const onUpdate = () => {\n    dispatch(actions.openForm());\n    dispatch(actions.editTask(task));\n  };\n\n  var {\n    task,\n    index\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: task.status ? \"label label-danger\" : \"label label-success\",\n        onClick: onUpdateStatus,\n        children: task.status ? \"Kích hoạt\" : \"Ẩn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: onUpdate,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPencilAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" Sửa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: onDelete,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" Xóa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskItem;\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: id => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: id => {\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onEditTask: task => {\n      dispatch(actions.editTask(task));\n    }\n  };\n};\n\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson13-my-crub-redux/src/components/TaskItem.js"],"names":["React","FontAwesomeIcon","faPencilAlt","faTrash","useDispatch","actions","TaskItem","props","dispatch","onUpdateStatus","updateStatus","task","id","onDelete","deleteTask","closeForm","onUpdate","openForm","editTask","index","name","status","mapDispatchToProps","onDeleteTask","onCloseForm","onOpenForm","onEditTask"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nfunction TaskItem(props) {\n  const dispatch = useDispatch();\n\n  const onUpdateStatus = () => {\n    dispatch(actions.updateStatus(props.task.id));\n  };\n\n  const onDelete = () => {\n    dispatch(actions.deleteTask(props.task.id));\n    dispatch(actions.closeForm());\n  };\n\n  const onUpdate = () => {\n    dispatch(actions.openForm());\n    dispatch(actions.editTask(task));\n  };\n\n  var { task, index } = props;\n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>{task.name}</td>\n      <td className=\"text-center\">\n        <span\n          className={task.status ? \"label label-danger\" : \"label label-success\"}\n          onClick={onUpdateStatus}\n        >\n          {task.status ? \"Kích hoạt\" : \"Ẩn\"}\n        </span>\n      </td>\n      <td className=\"text-center\">\n        <button type=\"button\" className=\"btn btn-warning\" onClick={onUpdate}>\n          <FontAwesomeIcon icon={faPencilAlt} />\n          {\" Sửa\"}\n        </button>\n        &nbsp;\n        <button type=\"button\" className=\"btn btn-danger\" onClick={onDelete}>\n          <FontAwesomeIcon icon={faTrash} />\n          {\" Xóa\"}\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: (id) => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: (id) => {\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onEditTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n  };\n};\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}