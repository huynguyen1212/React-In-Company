[{"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/reportWebVitals.js":"1","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/App.js":"2","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/index.js":"3","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskForm.js":"4","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskItem.js":"5","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskList.js":"6","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskSortControl.js":"7","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskControl.js":"8","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskSearchControl.js":"9"},{"size":362,"mtime":1606186215036,"results":"10","hashOfConfig":"11"},{"size":6546,"mtime":1606556561374,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1606186215036,"results":"13","hashOfConfig":"11"},{"size":3137,"mtime":1606529932589,"results":"14","hashOfConfig":"11"},{"size":1493,"mtime":1606530225879,"results":"15","hashOfConfig":"11"},{"size":2445,"mtime":1606531894317,"results":"16","hashOfConfig":"11"},{"size":2537,"mtime":1606502011781,"results":"17","hashOfConfig":"11"},{"size":504,"mtime":1606494114364,"results":"18","hashOfConfig":"11"},{"size":1266,"mtime":1606501747086,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vns7ph",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/reportWebVitals.js",[],["44","45"],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/App.js",["46","47","48"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport { filter, findIndex } from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      taskEditing: null,\n      filter: {\n        name: \"\",\n        status: -1,\n      },\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1,\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks,\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  generateID() {\n    return (\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      this.s4()\n    );\n  }\n\n  onToggleForm = () => {\n    if (this.state.isDisplayForm && this.state.taskEditing) {\n      this.setState({\n        isDisplayForm: true,\n        taskEditing: null,\n      });\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditing: null,\n      });\n    }\n  };\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n    if (data.id === \"\") {\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks: tasks,\n      taskEditing: null,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index != -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  };\n\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index != -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    this.onCloseForm();\n  };\n\n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    // var index = this.findIndex(id);\n    var index = findIndex(tasks, (task) => {\n      return task.id === id;\n    });\n    var taskEditing = tasks[index];\n    this.setState({\n      taskEditing: taskEditing,\n    });\n    this.onShowForm();\n  };\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n      },\n    });\n  };\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword: keyword,\n    });\n  };\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy: sortBy,\n      sortValue: sortValue,\n    });\n  };\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm,\n      taskEditing,\n      filter,\n      keyword,\n      sortBy,\n      sortValue,\n    } = this.state;\n    // tasks = filter(tasks, (task) => {\n    //   return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n    // });\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((task) => {\n        if (filter.status === -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n    if (keyword) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n    if (sortBy === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;\n        else if (a.status < b.status) return sortValue;\n        else return 0;\n      });\n    }\n    var elmTaskForm = isDisplayForm ? (\n      <TaskForm\n        onCloseForm={this.onCloseForm}\n        onSubmit={this.onSubmit}\n        task={taskEditing}\n      />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản lí công việc</h1> <hr />\n        </div>\n\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n            }\n          >\n            {elmTaskForm}\n          </div>\n\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onToggleForm}\n            >\n              <FontAwesomeIcon icon={faPlus} />\n              {\" Thêm Công Việc\"}\n            </button>\n            <TaskControl\n              onSearch={this.onSearch}\n              onSort={this.onSort}\n              sortBy={sortBy}\n              sortValue={sortValue}\n            />\n            <TaskList\n              tasks={tasks}\n              onUpdateStatus={this.onUpdateStatus}\n              onDelete={this.onDelete}\n              onUpdate={this.onUpdate}\n              onFilter={this.onFilter}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// Hiển thị danh sách công việc\n// Đóng mở form\n// Chức năng thêm mới công việc (lưu, hủy bỏ)\n// Cập nhập status\n// Chức năng xóa công việc\n// Chức năng sửa công việc\n// Lọc dữ liệu trên Table\n// Chức năng tìm kiếm\n// Chức năng sắp xếp\n",["49","50"],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/index.js",[],["51","52"],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskForm.js",["53"],"import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      status: false,\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.task) {\n      this.setState({\n        id: this.props.task.id,\n        name: this.props.task.name,\n        status: this.props.task.status,\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.task) {\n      this.setState({\n        id: nextProps.task.id,\n        name: nextProps.task.name,\n        status: nextProps.task.status,\n      });\n    } else if (!nextProps.task) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        status: false,\n      });\n    }\n  }\n\n  onCloseForm = () => {\n    this.props.onCloseForm();\n  };\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    if (name === \"status\") {\n      value = target.value === \"true\" ? true : false;\n    }\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.onClear();\n    this.onCloseForm();\n  };\n\n  onClear = () => {\n    this.setState({\n      name: \"\",\n      status: false,\n    });\n  };\n\n  render() {\n    var { id } = this.state;\n    return (\n      <div className=\"panel panel-warning\">\n        <div className=\"panel-heading\">\n          <h3 className=\"panel-title\">\n            {id != \"\" ? \"Cập nhập công việc \" : \"Thêm công việc \"}\n            <FontAwesomeIcon icon={faWindowClose} onClick={this.onCloseForm} />\n          </h3>\n        </div>\n        <div className=\"panel-body\">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <label>Tên : </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.onChange}\n              />\n            </div>\n            <label>Trạng thái : </label>\n            <select\n              name=\"status\"\n              className=\"form-control\"\n              value={this.state.status}\n              onChange={this.onChange}\n            >\n              <option value={true}>Kích hoạt</option>\n              <option value={false}>Ẩn</option>\n            </select>\n            <br />\n            <div className=\"text-center\">\n              <button type=\"submit\" className=\"btn btn-warning\">\n                <span className=\"fa fa-plus mr-5\"></span>Lưu lại\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={this.onClear}\n              >\n                <span className=\"fa fa-close mr-5\"></span>Hủy bỏ\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskForm;\n","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskItem.js",[],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskList.js",[],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskSortControl.js",["54","55","56","57"],"import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Sort extends Component {\n  onClick = (sortBy, sortValue) => {\n    this.props.onSort(sortBy, sortValue);\n  };\n  render() {\n    return (\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n        <div className=\"dropdown\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary dropdown-toggle\"\n            id=\"dropdownMenu1\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"true\"\n          >\n            {\"Sắp xếp \"}\n            <FontAwesomeIcon icon={faAngleDown} />\n          </button>\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n            <li onClick={() => this.onClick(\"name\", 1)}>\n              <a\n                role=\"button\"\n                className={\n                  this.props.sortBy === \"name\" && this.props.sortValue === 1\n                    ? \"sort\"\n                    : \"\"\n                }\n              >\n                <span className=\"fa fa-alpha-asc pr-5\">Tên A - Z</span>\n              </a>\n            </li>\n            <li onClick={() => this.onClick(\"name\", -1)}>\n              <a\n                role=\"button\"\n                className={\n                  this.props.sortBy === \"name\" && this.props.sortValue === -1\n                    ? \"sort\"\n                    : \"\"\n                }\n              >\n                <span className=\"fa fa-alpha-asc pr-5\">Tên Z - A</span>\n              </a>\n            </li>\n            <li role=\"separator\" className=\"divider\"></li>\n            <li onClick={() => this.onClick(\"status\", 1)}>\n              <a\n                role=\"button\"\n                className={\n                  this.props.sortBy === \"status\" && this.props.sortValue === 1\n                    ? \"sort\"\n                    : \"\"\n                }\n              >\n                Trạng thái kích hoạt\n              </a>\n            </li>\n            <li onClick={() => this.onClick(\"status\", -1)}>\n              <a\n                role=\"button\"\n                className={\n                  this.props.sortBy === \"status\" && this.props.sortValue === -1\n                    ? \"sort\"\n                    : \"\"\n                }\n              >\n                Trạng thái ẩn\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sort;\n","/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskControl.js",[],"/home/huynguyen/Desktop/Thực tập/React-In-Company/lesson10-crub/src/components/TaskSearchControl.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":101,"column":15,"nodeType":"68","messageId":"69","endLine":101,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":124,"column":15,"nodeType":"68","messageId":"69","endLine":124,"endColumn":17},{"ruleId":"58","replacedBy":"70"},{"ruleId":"60","replacedBy":"71"},{"ruleId":"58","replacedBy":"72"},{"ruleId":"60","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"67","line":77,"column":17,"nodeType":"68","messageId":"69","endLine":77,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":26,"column":15,"nodeType":"76","endLine":33,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":38,"column":15,"nodeType":"76","endLine":45,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":51,"column":15,"nodeType":"76","endLine":58,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":63,"column":15,"nodeType":"76","endLine":70,"endColumn":16},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'filter' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["77"],["78"],["77"],["78"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]